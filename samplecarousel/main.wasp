app carousel {
  wasp: {
    version: "^0.11.1"
  },
  title: "carousel",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int        @id @default(autoincrement())
    username String     @unique
    password String
    Carousel Carousel[]
psl=}

entity Carousel {=psl
    id      Int    @id @default(autoincrement())
    imgPath String
    caption String
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
psl=}

action createCarousel {
  fn: import { createCarousel } from "@server/actions.js",
  entities: [Carousel, User]
}

action updateCarousel {
  fn: import { updateCarousel } from "@server/actions.js",
  entities: [Carousel, User]
}

query getCarousel {
  fn: import { getCarousel } from "@server/queries.js",
  entities: [Carousel, User]
}

query getCarousels {
  fn: import { getCarousels } from "@server/queries.js",
  entities: [Carousel, User]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import { Home } from "@client/pages/Home.jsx",
  authRequired: false
}
